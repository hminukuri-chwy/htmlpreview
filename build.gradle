plugins {
    id("com.github.johnrengelman.shadow") version "6.1.0"
    id("application")
}
ext {
    versions = [
            'micronaut': [
                    'aws'  : '2.0.1',
                    'main' : '2.0.0',
                    'netty': '1.3.5',
                    'web'  : '1.3.5',
                    'security': '2.0.0.M2'
            ],
            'logback'  : [
                    'jackson'    : '0.1.5',
                    'jsonClassic': '0.1.5',
                    'classic'    : '1.2.3'
            ],
            'lombok'   : '1.18.12',
            'mockito'  : [
                    'junitJupiter': '3.3.3'
            ]
    ]
}

version = "0.1"
group = "com.chewy"

repositories {
    mavenCentral()
    jcenter()
    maven {
        credentials {
            username = artifactory_username
            password = artifactory_password
        }
        url 'https://chewyinc.jfrog.io/chewyinc/libs-release'
    }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    annotationProcessor "org.projectlombok:lombok:1.18.12"
    annotationProcessor(platform("io.micronaut:micronaut-bom:$micronautVersion"))
    annotationProcessor("io.micronaut:micronaut-inject-java")
    annotationProcessor("io.micronaut:micronaut-validation")
    annotationProcessor("io.micronaut:micronaut-graal")


    compileOnly(platform("io.micronaut:micronaut-bom:$micronautVersion"))
    compileOnly("org.graalvm.nativeimage:svm")
    compileOnly("org.projectlombok:lombok:1.18.12")

    implementation(platform("io.micronaut:micronaut-bom:$micronautVersion"))
    implementation("io.micronaut:micronaut-inject")
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-runtime")
    implementation("javax.annotation:javax.annotation-api")
    implementation("io.micronaut.aws:micronaut-function-aws")
    implementation("io.micronaut.aws:micronaut-function-aws-custom-runtime"){
        exclude group: "com.fasterxml.jackson.module", module: "jackson-module-afterburner"
    }
    //version 2
    implementation "io.micronaut.aws:micronaut-aws-sdk-v2:${versions.micronaut.aws}", {
        exclude group: "software.amazon.awssdk", module: "apache-client"
        exclude group: "software.amazon.awssdk", module: "netty-nio-client"
    }
    implementation 'org.freemarker:freemarker:2.3.31'
    implementation("io.micronaut.views:micronaut-views-freemarker")
    implementation group: 'org.xhtmlrenderer', name: 'flying-saucer-pdf', version: '9.1.20'
    implementation group: 'com.lowagie', name: 'itext', version: '2.1.7', ext: 'pom'


    //project dependencies
    compile group: 'com.google.guava', name: 'guava', version: '27.1-jre'
    compile 'com.sun.mail:javax.mail:1.5.5'
    implementation("software.amazon.awssdk:sns:${versions.micronaut.aws}")//v2
    implementation "software.amazon.awssdk:s3:${versions.micronaut.aws}",{
        exclude group: "software.amazon.awssdk", module: "apache-client"
        exclude group: "software.amazon.awssdk", module: "netty-nio-client"
    }
    compile('com.amazonaws:aws-java-sdk-s3:1.11.560')

    implementation group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.25'
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    runtimeOnly("org.postgresql:postgresql:42.2.5")


    runtimeOnly("ch.qos.logback:logback-classic")
    testAnnotationProcessor(enforcedPlatform("io.micronaut:micronaut-bom:$micronautVersion"))
    testAnnotationProcessor("io.micronaut:micronaut-inject-java")
    testImplementation(enforcedPlatform("io.micronaut:micronaut-bom:$micronautVersion"))
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("io.micronaut.test:micronaut-test-junit5")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
}

test.classpath += configurations.developmentOnly

mainClassName = "com.chewy.LambdaRuntime"

// use JUnit 5 platform
test {
    useJUnitPlatform()
}

java {
    sourceCompatibility = JavaVersion.toVersion('1.8')
    targetCompatibility = JavaVersion.toVersion('1.8')
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs.addAll([
            '-parameters',
            // enables incremental compilation
            '-Amicronaut.processing.incremental=true',
            '-Amicronaut.processing.annotations=com.chewy',
            "-Amicronaut.processing.group=$project.group",
            "-Amicronaut.processing.module=$project.name",
    ])
}

shadowJar {
    mergeServiceFiles()
}

tasks.withType(JavaExec) {
    classpath += configurations.developmentOnly
    jvmArgs('-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
    if (gradle.startParameter.continuous) {
        systemProperties(
                'micronaut.io.watch.restart':'true',
                'micronaut.io.watch.enabled':'true',
                "micronaut.io.watch.paths":"src/main"
        )
    }
}

allprojects {
    configurations {
        all {
            exclude group: 'commons-logging'
        }
    }
}



